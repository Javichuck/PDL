PROGRAMA' -> PROGRAMA

PROGRAMA -> BLOQUE SALTO PROGRAMA
PROGRAMA -> FUNCION SALTO PROGRAMA
PROGRAMA -> $

BLOQUE -> var id
BLOQUE -> if ( EXPRESION ) SENTENCIA
BLOQUE -> SENTENCIA
BLOQUE -> switch ( EXPRESION ) SALTO { SALTO CASE SALTO }

CASE -> case EXPRESION : CUERPO CASE
CASE -> case EXPRESION : CUERPO CASE SALTO break
CASE -> default : CUERPO

FUNCION -> function id ( ARGUMENTOS ) SALTO { SALTO CUERPO SALTO }

SENTENCIA -> id = EXPRESION
SENTENCIA -> id += EXPRESION
SENTENCIA -> id -= EXPRESION
SENTENCIA -> id ( LLAMADAFUN )
SENTENCIA -> document . write ( EXPRESION )
SENTENCIA -> prompt ( id )
SENTENCIA -> return RETURNVALUE

CUERPO -> BLOQUE SALTO CUERPO
CUERPO -> lambda

SALTO -> sl SALTO
SALTO -> sl

RETURNVALUE -> EXPRESION
RETURNVALUE -> lambda

LLAMADAFUN -> EXPRESION LLAMADAFUN2
LLAMADAFUN -> lambda

LLAMADAFUN2 -> , EXPRESION LLAMADAFUN2
LLAMADAFUN2 -> lambda

ARGUMENTOS -> id ARGUMENTOS2
ARGUMENTOS -> lambda

ARGUMENTOS2 -> , id ARGUMENTOS2
ARGUMENTOS2 -> lambda

# Expresiones con precedencia: < <= ; + - ; ! ; ()
EXPRESION -> EXPRESION < ARITMETICA
EXPRESION -> EXPRESION <= ARITMETICA
EXPRESION -> ARITMETICA

ARITMETICA -> ARITMETICA + SIMPLE
ARITMETICA -> ARITMETICA - SIMPLE
ARITMETICA -> SIMPLE

SIMPLE -> ! SIMPLE
SIMPLE -> ( EXPRESION )
SIMPLE -> id
SIMPLE -> num
SIMPLE -> cad
SIMPLE -> id ( LLAMADAFUN )