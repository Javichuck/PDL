PROGRAMA' -> PROGRAMA

PROGRAMA -> BLOQUE FINSENTENCIA PROGRAMA
PROGRAMA -> FUNCION PROGRAMA
PROGRAMA -> $

BLOQUE -> var id
BLOQUE -> if ( EXPRESION ) SENTENCIA
BLOQUE -> SENTENCIA

FUNCION -> function id ( ARGUMENTOS ) FINSENTENCIA { FINSENTENCIA CUERPO FINSENTENCIA }

SENTENCIA -> id = EXPRESION
SENTENCIA -> id ( LLAMADAFUN )
SENTENCIA -> document . write ( EXPRESION )
SENTENCIA -> id -= EXPRESION
SENTENCIA -> prompt ( id )
SENTENCIA -> return RETURNVALUE

CUERPO -> BLOQUE FINSENTENCIA CUERPO
CUERPO -> lambda

FINSENTENCIA -> sl FINSENTENCIA
FINSENTENCIA -> sl

RETURNVALUE -> EXPRESION
RETURNVALUE -> lambda

LLAMADAFUN -> EXPRESION LLAMADAFUN2
LLAMADAFUN -> lambda

LLAMADAFUN2 -> , EXPRESION LLAMADAFUN2
LLAMADAFUN2 -> lambda

ARGUMENTOS -> id ARGUMENTOS2
ARGUMENTOS -> lambda

ARGUMENTOS2 -> , id ARGUMENTOS2
ARGUMENTOS2 -> lambda

# Expresiones con precedencia: && ; > ;

EXPRESION -> EXPRESION && RELACIONAL
EXPRESION -> RELACIONAL

RELACIONAL -> RELACIONAL > ARITMETICA
RELACIONAL -> ARITMETICA

ARITMETICA -> ARITMETICA + SIMPLE
ARITMETICA -> SIMPLE

SIMPLE -> ( EXPRESION )
SIMPLE -> id
SIMPLE -> num
SIMPLE -> cad
SIMPLE -> id ( LLAMADAFUN )